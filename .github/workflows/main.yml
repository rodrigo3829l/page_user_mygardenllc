name: PWA CI/CD Workflow - Main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: write-all

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_GH_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: yarn install
      - name: Run ESLint
        run: yarn lint

  unit-integration-tests:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_GH_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: yarn install
      - name: Run Jest Tests
        run: |
          set +e
          yarn test:unit --coverage || exit_code=$?
          echo "exit_code=$exit_code" >> $GITHUB_ENV
          set -e
      - name: Handle Jest Failure
        if: env.exit_code != '0'
        run: |
          echo "Jest tests failed. Reverting to previous version..."
          git config --global user.email "20210658@uthh.edu.mx"
          git config --global user.name "rodrigo3829l"
          git reset --hard HEAD^
          git push origin main --force

  sonar-scan:
    needs: unit-integration-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_GH_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: yarn install
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk-scan:
    needs: sonar-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_GH_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: yarn install
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk Scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk monitor --all-projects --org=6ce58cdd-2e65-4c0c-bbe5-705980cee5fe
          snyk test --all-projects --org=6ce58cdd-2e65-4c0c-bbe5-705980cee5fe || exit_code=$?
          echo "exit_code=$exit_code" >> $GITHUB_ENV
      - name: Handle Snyk Failure
        if: env.exit_code != '0'
        run: |
          echo "Snyk scan failed. Reverting to previous version..."
          git config --global user.email "20210658@uthh.edu.mx"
          git config --global user.name "rodrigo3829l"
          git reset --hard HEAD^
          git push origin main --force

  deploy:
    needs: snyk-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_GH_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: yarn install
      - name: Build project
        run: yarn build
      - name: Install lftp
        run: sudo apt-get install lftp
      - name: Deploy to Hostinger via FTPS (with exclusions)
        env:
          FTP_HOST: ${{ secrets.FTP_HOST }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          lftp -e "
            set ssl:verify-certificate no;
            set ftp:ssl-force true;
            set ftp:ssl-protect-data true;
            set ftp:ssl-protect-list true;
            set ftp:ssl-allow yes;
            open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_HOST;
            mirror -R --only-newer --exclude-glob admin --exclude-glob oldcosas --exclude .htaccess ./dist /public_html;
            quit
          "

  e2e-tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_GH_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: yarn install
      - name: Run Cypress Tests
        run: |
          npx cypress run || exit_code=$?
          if [ $exit_code -ne 0 ]; then
            echo "Cypress tests failed. Reverting to previous version..."
            git config --global user.email "20210658@uthh.edu.mx"
            git config --global user.name "rodrigo3829l"
            git reset --hard HEAD^
            git push origin main --force
