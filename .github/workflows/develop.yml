name: PWA CI/CD Workflow - Develop

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

permissions: write-all

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn install
      - name: Run Prettier
        run: yarn format
  lint:
    needs: format-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_GH_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn install
      - name: Run ESLint
        run: yarn lint

  unit-integration-tests:
    needs: lint
    runs-on: ubuntu-latest
    outputs:
      jest_exit_code: ${{ steps.set_exit_code.outputs.exit_code }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_GH_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn install
      - name: Run Jest Tests
        id: set_exit_code
        run: |
          set +e
          yarn test:unit --coverage || exit_code=$?
          echo "::set-output name=exit_code::$exit_code"
          mv coverage/lcov-report ./coverage-report
          echo "exit_code=$exit_code"
          set -e
      - name: Upload Jest Test Results
        uses: actions/upload-artifact@v3
        with:
          name: jest-results
          path: coverage-reports/

  jest-validation:
    needs: unit-integration-tests
    runs-on: ubuntu-latest
    if: ${{ needs.unit-integration-tests.outputs.jest_exit_code != '0' }}
    steps:
      - name: Handle Jest Failure
        run: |
          echo "Jest tests failed. Reverting to previous version..."
          git config --global user.email "20210658@uthh.edu.mx"
          git config --global user.name "rodrigo3829l"
          git reset --hard HEAD^
          git push origin main --force

  post-coverage-comment:
    needs: unit-integration-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v4
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Los reportes de cobertura est√°n disponibles en los artefactos: [Ver artefactos](${{ github.run_id }})`
            });

  sonar-scan:
    needs: unit-integration-tests
    if: ${{ needs.unit-integration-tests.outputs.jest_exit_code == '0' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_GH_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn install
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk-scan:
    needs: sonar-scan
    if: ${{ needs.unit-integration-tests.outputs.jest_exit_code == '0' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_GH_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn install
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk Scan
        id: set_exit_code
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          set +e
          snyk monitor --all-projects --org=6ce58cdd-2e65-4c0c-bbe5-705980cee5fe
          snyk test --all-projects --org=6ce58cdd-2e65-4c0c-bbe5-705980cee5fe || exit_code=$?
          echo "::set-output name=exit_code::$exit_code"
          echo "exit_code=$exit_code"
          set -e

  snyk-validation:
    needs: snyk-scan
    if: ${{ needs.snyk-scan.outputs.snyk_exit_code != '0' }}
    runs-on: ubuntu-latest
    steps:
      - name: Handle Snyk Failure
        run: |
          echo "Snyk scan failed. Reverting to previous version..."
          git config --global user.email "20210658@uthh.edu.mx"
          git config --global user.name "rodrigo3829l"
          git reset --hard HEAD^
          git push origin main --force

  notify-pr:
    runs-on: ubuntu-latest
    needs: [unit-integration-tests, snyk-scan, sonar-scan]
    steps:
      - uses: actions/github-script@v4
        with:
          script: |
            const status = ${{ needs.unit-integration-tests.outputs.jest_exit_code }} == '0' && ${{ needs.snyk-scan.outputs.snyk_exit_code }} == '0' ? 'Success' : 'Failed';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `CI/CD Pipeline ${status} for branch ${context.ref}.`
            });
